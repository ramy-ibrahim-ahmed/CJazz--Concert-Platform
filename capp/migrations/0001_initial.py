# Generated by Django 4.2.4 on 2023-08-10 05:07

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cjazz', models.TextField(verbose_name='About Cairo Jazz Club')),
                ('developers', models.TextField(verbose_name='About Developers')),
                ('technology', models.TextField(verbose_name='About Technology')),
            ],
            options={
                'verbose_name': 'About',
                'verbose_name_plural': 'About',
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=9)),
                ('youtube', models.CharField(max_length=50, null=True)),
                ('youtube_link', models.URLField(null=True)),
                ('image', models.ImageField(upload_to='photos/%y/%m/%d')),
                ('active', models.BooleanField(default=True)),
                ('birthdate', models.DateField(null=True)),
                ('joined', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'verbose_name': 'Artist',
                'verbose_name_plural': 'Artists',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('company', models.CharField(max_length=50, null=True)),
                ('message', models.TextField(null=True)),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, verbose_name='Music Type')),
            ],
            options={
                'verbose_name': 'Music',
                'verbose_name_plural': 'Musics',
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('date', models.DateField(unique=True)),
                ('time', models.TimeField()),
                ('artist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='capp.artist', verbose_name='Artist')),
            ],
            options={
                'verbose_name': 'Party',
                'verbose_name_plural': 'Parties',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('discount', models.IntegerField(default=0, verbose_name='save up tp')),
            ],
            options={
                'verbose_name': 'Plan',
                'verbose_name_plural': 'Plans',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Pros',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('allowed', 'Allowed'), ('not_allowed', 'Not Allowed')], default='Allowed', max_length=50)),
            ],
            options={
                'verbose_name': 'Pros',
                'verbose_name_plural': 'Pros',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('phone', models.CharField(max_length=50, null=True)),
                ('feedback', models.TextField(null=True)),
                ('number', models.IntegerField(default=1)),
                ('party', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='capp.party', verbose_name='Party')),
                ('plan', models.ManyToManyField(null=True, to='capp.plan', verbose_name='parties')),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='plan',
            name='pros',
            field=models.ManyToManyField(to='capp.pros', verbose_name='Pros'),
        ),
        migrations.AddField(
            model_name='party',
            name='plan',
            field=models.ManyToManyField(to='capp.plan', verbose_name='Plans'),
        ),
        migrations.AddField(
            model_name='artist',
            name='music',
            field=models.ManyToManyField(to='capp.music', verbose_name='Music Types'),
        ),
    ]
